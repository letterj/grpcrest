// Code generated by protoc-gen-go.
// source: grpcrest.proto
// DO NOT EDIT!

/*
Package grpcrest is a generated protocol buffer package.

It is generated from these files:
	grpcrest.proto

It has these top-level messages:
	CreateWRequest
	CreateWResponse
	ListWRequest
	ListWResponse
	DeleteWRequest
	DeleteWResponse
	UpdateWRequest
	UpdateWResponse
	ShowWRequest
	ShowWResponse
*/
package grpcrest

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gengo/grpc-gateway/third_party/googleapis/google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

// Create Widget Request
type CreateWRequest struct {
	Data string `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *CreateWRequest) Reset()                    { *m = CreateWRequest{} }
func (m *CreateWRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateWRequest) ProtoMessage()               {}
func (*CreateWRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Create Widget Response
type CreateWResponse struct {
	Result string `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *CreateWResponse) Reset()                    { *m = CreateWResponse{} }
func (m *CreateWResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateWResponse) ProtoMessage()               {}
func (*CreateWResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// List Widget Request
type ListWRequest struct {
}

func (m *ListWRequest) Reset()                    { *m = ListWRequest{} }
func (m *ListWRequest) String() string            { return proto.CompactTextString(m) }
func (*ListWRequest) ProtoMessage()               {}
func (*ListWRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// List Widget Response
type ListWResponse struct {
	Result string `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *ListWResponse) Reset()                    { *m = ListWResponse{} }
func (m *ListWResponse) String() string            { return proto.CompactTextString(m) }
func (*ListWResponse) ProtoMessage()               {}
func (*ListWResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

// Delete Widget Request
type DeleteWRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteWRequest) Reset()                    { *m = DeleteWRequest{} }
func (m *DeleteWRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteWRequest) ProtoMessage()               {}
func (*DeleteWRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

// Delete Widget Response
type DeleteWResponse struct {
	Result string `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *DeleteWResponse) Reset()                    { *m = DeleteWResponse{} }
func (m *DeleteWResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteWResponse) ProtoMessage()               {}
func (*DeleteWResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

// Update Widget Request
type UpdateWRequest struct {
	Data string `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *UpdateWRequest) Reset()                    { *m = UpdateWRequest{} }
func (m *UpdateWRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateWRequest) ProtoMessage()               {}
func (*UpdateWRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

// Update Widget Response
type UpdateWResponse struct {
	Result string `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *UpdateWResponse) Reset()                    { *m = UpdateWResponse{} }
func (m *UpdateWResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateWResponse) ProtoMessage()               {}
func (*UpdateWResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

// Show Widget Request
type ShowWRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *ShowWRequest) Reset()                    { *m = ShowWRequest{} }
func (m *ShowWRequest) String() string            { return proto.CompactTextString(m) }
func (*ShowWRequest) ProtoMessage()               {}
func (*ShowWRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

// SHow Widget Response
type ShowWResponse struct {
	Result string `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *ShowWResponse) Reset()                    { *m = ShowWResponse{} }
func (m *ShowWResponse) String() string            { return proto.CompactTextString(m) }
func (*ShowWResponse) ProtoMessage()               {}
func (*ShowWResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func init() {
	proto.RegisterType((*CreateWRequest)(nil), "grpcrest.CreateWRequest")
	proto.RegisterType((*CreateWResponse)(nil), "grpcrest.CreateWResponse")
	proto.RegisterType((*ListWRequest)(nil), "grpcrest.ListWRequest")
	proto.RegisterType((*ListWResponse)(nil), "grpcrest.ListWResponse")
	proto.RegisterType((*DeleteWRequest)(nil), "grpcrest.DeleteWRequest")
	proto.RegisterType((*DeleteWResponse)(nil), "grpcrest.DeleteWResponse")
	proto.RegisterType((*UpdateWRequest)(nil), "grpcrest.UpdateWRequest")
	proto.RegisterType((*UpdateWResponse)(nil), "grpcrest.UpdateWResponse")
	proto.RegisterType((*ShowWRequest)(nil), "grpcrest.ShowWRequest")
	proto.RegisterType((*ShowWResponse)(nil), "grpcrest.ShowWResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion1

// Client API for GRPCRestApi service

type GRPCRestApiClient interface {
	CreateWidget(ctx context.Context, in *CreateWRequest, opts ...grpc.CallOption) (*CreateWResponse, error)
	ListWidget(ctx context.Context, in *ListWRequest, opts ...grpc.CallOption) (*ListWResponse, error)
	DeleteWidget(ctx context.Context, in *DeleteWRequest, opts ...grpc.CallOption) (*DeleteWResponse, error)
	UpdateWidget(ctx context.Context, in *UpdateWRequest, opts ...grpc.CallOption) (*UpdateWResponse, error)
	ShowWidget(ctx context.Context, in *ShowWRequest, opts ...grpc.CallOption) (*ShowWResponse, error)
}

type gRPCRestApiClient struct {
	cc *grpc.ClientConn
}

func NewGRPCRestApiClient(cc *grpc.ClientConn) GRPCRestApiClient {
	return &gRPCRestApiClient{cc}
}

func (c *gRPCRestApiClient) CreateWidget(ctx context.Context, in *CreateWRequest, opts ...grpc.CallOption) (*CreateWResponse, error) {
	out := new(CreateWResponse)
	err := grpc.Invoke(ctx, "/grpcrest.GRPCRestApi/CreateWidget", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCRestApiClient) ListWidget(ctx context.Context, in *ListWRequest, opts ...grpc.CallOption) (*ListWResponse, error) {
	out := new(ListWResponse)
	err := grpc.Invoke(ctx, "/grpcrest.GRPCRestApi/ListWidget", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCRestApiClient) DeleteWidget(ctx context.Context, in *DeleteWRequest, opts ...grpc.CallOption) (*DeleteWResponse, error) {
	out := new(DeleteWResponse)
	err := grpc.Invoke(ctx, "/grpcrest.GRPCRestApi/DeleteWidget", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCRestApiClient) UpdateWidget(ctx context.Context, in *UpdateWRequest, opts ...grpc.CallOption) (*UpdateWResponse, error) {
	out := new(UpdateWResponse)
	err := grpc.Invoke(ctx, "/grpcrest.GRPCRestApi/UpdateWidget", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCRestApiClient) ShowWidget(ctx context.Context, in *ShowWRequest, opts ...grpc.CallOption) (*ShowWResponse, error) {
	out := new(ShowWResponse)
	err := grpc.Invoke(ctx, "/grpcrest.GRPCRestApi/ShowWidget", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GRPCRestApi service

type GRPCRestApiServer interface {
	CreateWidget(context.Context, *CreateWRequest) (*CreateWResponse, error)
	ListWidget(context.Context, *ListWRequest) (*ListWResponse, error)
	DeleteWidget(context.Context, *DeleteWRequest) (*DeleteWResponse, error)
	UpdateWidget(context.Context, *UpdateWRequest) (*UpdateWResponse, error)
	ShowWidget(context.Context, *ShowWRequest) (*ShowWResponse, error)
}

func RegisterGRPCRestApiServer(s *grpc.Server, srv GRPCRestApiServer) {
	s.RegisterService(&_GRPCRestApi_serviceDesc, srv)
}

func _GRPCRestApi_CreateWidget_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(CreateWRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(GRPCRestApiServer).CreateWidget(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _GRPCRestApi_ListWidget_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(ListWRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(GRPCRestApiServer).ListWidget(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _GRPCRestApi_DeleteWidget_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(DeleteWRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(GRPCRestApiServer).DeleteWidget(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _GRPCRestApi_UpdateWidget_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(UpdateWRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(GRPCRestApiServer).UpdateWidget(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _GRPCRestApi_ShowWidget_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(ShowWRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(GRPCRestApiServer).ShowWidget(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _GRPCRestApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcrest.GRPCRestApi",
	HandlerType: (*GRPCRestApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateWidget",
			Handler:    _GRPCRestApi_CreateWidget_Handler,
		},
		{
			MethodName: "ListWidget",
			Handler:    _GRPCRestApi_ListWidget_Handler,
		},
		{
			MethodName: "DeleteWidget",
			Handler:    _GRPCRestApi_DeleteWidget_Handler,
		},
		{
			MethodName: "UpdateWidget",
			Handler:    _GRPCRestApi_UpdateWidget_Handler,
		},
		{
			MethodName: "ShowWidget",
			Handler:    _GRPCRestApi_ShowWidget_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 363 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x93, 0x41, 0x4f, 0xc2, 0x30,
	0x1c, 0xc5, 0x03, 0x1a, 0xa2, 0x7f, 0xe7, 0x08, 0x3d, 0x00, 0x2e, 0xc4, 0x90, 0xc6, 0x44, 0xe5,
	0xc0, 0xa2, 0xde, 0xbc, 0x19, 0x4c, 0xbc, 0x78, 0x50, 0x8c, 0x7a, 0xf1, 0x52, 0x5d, 0x33, 0x9b,
	0x10, 0x5a, 0xb7, 0x22, 0x07, 0xc3, 0xc5, 0xaf, 0xe0, 0x47, 0xf3, 0xea, 0xd1, 0x0f, 0x62, 0x29,
	0xdd, 0xe8, 0x36, 0x74, 0xde, 0xda, 0xf5, 0xf5, 0xf5, 0xfd, 0xdf, 0x2f, 0x03, 0x37, 0x8c, 0xc4,
	0x53, 0x44, 0x63, 0xd9, 0x17, 0x11, 0x97, 0x1c, 0x6d, 0x24, 0x7b, 0xaf, 0x13, 0x72, 0x1e, 0x8e,
	0xa8, 0x4f, 0x04, 0xf3, 0xc9, 0x78, 0xcc, 0x25, 0x91, 0x8c, 0x8f, 0xe3, 0x85, 0x0e, 0xef, 0x81,
	0x3b, 0x88, 0x28, 0x91, 0xf4, 0x7e, 0x48, 0x5f, 0x26, 0x4a, 0x8f, 0x10, 0xac, 0x07, 0x44, 0x92,
	0x76, 0xa5, 0x5b, 0x39, 0xd8, 0x1c, 0xea, 0x35, 0x3e, 0x84, 0x7a, 0xaa, 0x8a, 0x85, 0xba, 0x4d,
	0x51, 0x13, 0x6a, 0xca, 0x7e, 0x32, 0x92, 0x46, 0x68, 0x76, 0xd8, 0x05, 0xe7, 0x92, 0xc5, 0x32,
	0xb1, 0xc3, 0xfb, 0xb0, 0x6d, 0xf6, 0x25, 0x17, 0xbb, 0xe0, 0x9e, 0xd3, 0x11, 0xb5, 0x92, 0xb8,
	0x50, 0x65, 0x81, 0x51, 0xa9, 0xd5, 0x3c, 0x45, 0xaa, 0x28, 0x31, 0x53, 0x63, 0xdd, 0x8a, 0xe0,
	0x1f, 0x63, 0xa5, 0xaa, 0x12, 0xc3, 0x5d, 0x70, 0x6e, 0x9e, 0xf9, 0xf4, 0xd7, 0x6c, 0x6a, 0x4c,
	0x73, 0xfe, 0xb7, 0xd1, 0xf1, 0xd7, 0x1a, 0x6c, 0x5d, 0x0c, 0xaf, 0x06, 0x4a, 0x28, 0xcf, 0x04,
	0x43, 0x04, 0x1c, 0x53, 0x2d, 0x0b, 0x42, 0x2a, 0x51, 0xbb, 0x9f, 0x92, 0xcc, 0x82, 0xf1, 0x76,
	0x56, 0x9c, 0x2c, 0x1e, 0xc3, 0x9d, 0xf7, 0xcf, 0xef, 0x8f, 0x6a, 0xd3, 0x6b, 0xf8, 0xaf, 0x47,
	0xfe, 0x54, 0x1b, 0xf9, 0x6f, 0xf3, 0x11, 0x67, 0xa7, 0x95, 0x1e, 0xba, 0x06, 0xd0, 0x08, 0x16,
	0x0f, 0x34, 0x97, 0x36, 0x36, 0x28, 0xaf, 0x55, 0xf8, 0x6e, 0xcc, 0x91, 0x36, 0x77, 0x10, 0x2c,
	0xcd, 0xd1, 0x03, 0x38, 0x06, 0x45, 0x21, 0x75, 0x16, 0xa2, 0x9d, 0x3a, 0x07, 0x0f, 0xb7, 0xb4,
	0x71, 0xa3, 0x57, 0xb7, 0x53, 0xb3, 0x60, 0x36, 0xef, 0xc4, 0x70, 0x29, 0xb8, 0x67, 0xa9, 0xda,
	0xee, 0x39, 0x92, 0x49, 0x27, 0x78, 0x75, 0x27, 0x77, 0x00, 0x9a, 0x57, 0xa1, 0x13, 0x9b, 0xb2,
	0xdd, 0x49, 0x86, 0x6e, 0x12, 0x1d, 0xe5, 0xa3, 0x3f, 0xd6, 0xf4, 0x6f, 0x75, 0xf2, 0x13, 0x00,
	0x00, 0xff, 0xff, 0xab, 0x32, 0xbf, 0x1d, 0x90, 0x03, 0x00, 0x00,
}
